The ``2-matrix-divided`` module
======================

Using ``matrix_divided``
-------------------

First import ``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now we use it:

normal division of a matrix
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

matrix where rows are not the same size
    >>> matrix_divided([[1, 2, 3], [4, 5, 6, 4]], 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

matrix that doesn't contain just the lists or lists of integers or floats
    >>> matrix_divided([[1, 2, 3], "abel"], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

division by zero
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

Missing two arguments
    >>> print(matrix_divided())
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'


Missing one argument
    >>> print(matrix_divided([[1, 2, 3],[4, 5, 6]], ))
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

Division by infinity
>>> print(matrix_divided(matrix, float('inf')))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
    
division by a string
    >>> print(matrix_divided([[1, 2, 3],[4, 5, 6]], "abel"))
    Traceback (most recent call last):
    TypeError: div must be a number

