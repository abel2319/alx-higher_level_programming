The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

First import ``add_integer`` from the ``0-add_integer`` module:

    >>> add_integer = __import__('0-add_integer').add_integer

Now we use it:

additon of two integers
    >>> add_integer(6, 8)
    14

addition of two floats
    >>> add_integer(6.6, 2.05)
    8

using one argument, the addition will be done with 98
    >>> add_integer(6)
    104

Possible Exceptions
If either argument is a non-integer or non-float, a TypeError is raised
Convert infinity, NaN
    >>> add_integer("abel", 23)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(float('NaN'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
 
    >>> add_integer(10, float('NaN'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'

    >>> add_integer(0, float('Inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
